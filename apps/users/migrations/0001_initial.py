# Generated by Django 2.2.5 on 2022-01-10 05:49

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('area', '0002_auto_20220110_0549'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建数据的时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新数据的时间')),
                ('place', models.CharField(max_length=50, verbose_name='地址')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机')),
                ('tel', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='固定电话')),
                ('email', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='电子邮箱')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='逻辑删除')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='city_addresses', to='area.Area', verbose_name='市')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='district_addresses', to='area.Area', verbose_name='区')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='province_addresses', to='area.Area', verbose_name='省')),
            ],
            options={
                'verbose_name': '用户地址',
                'verbose_name_plural': '用户地址',
                'db_table': 'tb_address',
                'ordering': ['-update_time'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='昵称')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('profile_photo', models.CharField(max_length=256, verbose_name='用户头像')),
                ('last_login', models.DateTimeField(default=datetime.datetime.now, verbose_name='最后登录的时间')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='注册的时间')),
                ('introduction', models.CharField(max_length=128, verbose_name='简介')),
                ('status', models.IntegerField(default=1, verbose_name='状态，是否可用，0-不可用，1-可用')),
                ('business', models.IntegerField(default=0, verbose_name='商家，是否可用，0-不可用，1-可用')),
                ('email_active', models.BooleanField(default=False, verbose_name='邮箱验证状态')),
                ('dianzan_num', models.IntegerField(default=0, verbose_name='获赞总数')),
                ('travel_note_num', models.IntegerField(default=0, verbose_name='游记总数')),
                ('dianliang_area_num', models.IntegerField(default=0, verbose_name='点亮地区数')),
                ('sex', models.SmallIntegerField(choices=[(0, '男'), (1, '女')], default=0, verbose_name='性别')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否为管理员')),
                ('default_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.Address', verbose_name='默认地址')),
                ('last_address_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='area.Area', verbose_name='上一次的位置')),
            ],
            options={
                'verbose_name': '用戶',
                'verbose_name_plural': '用戶',
                'db_table': 'tb_users',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='users.User', verbose_name='用户'),
        ),
    ]
